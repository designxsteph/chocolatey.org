@model IEnumerable<EventViewModel>
@using System.Linq
@{
    ViewBag.Title = "Events";
    Bundles.Reference("content/css/chocolatey.bundle.min.css");
    Bundles.Reference("Scripts/main");
    Bundles.Reference("Scripts/events");

    var description = "Find past and upcoming webinars, workshops, and conferences by Chocolatey.";
}
@section ExtraHeaders {
    <meta property="og:description" content="@description" />
    <meta property="description" content="@description" />
}

<div class="bg-theme-primary">
    <section class="py-3 py-lg-5">
        <div class="container py-3 text-center">
            <h1 class="display-3">Chocolatey Events</h1>
            <h3 class="mb-0">Find past and upcoming webinars, workshops, and conferences.</h3>
        </div>
    </section>
    <div class="curve curve-bottom curve-bg-theme"></div>
</div>
<section id="events" class="pb-3 pb-lg-5">
    <div class="container">
        @if (Model.Any(x => x.EventDate > DateTime.UtcNow))
        {
            <h2>Upcoming Events</h2>
            <hr />
            <ul class="list-unstyled">
                @foreach (var post in @Model.Where(x => x.EventDate > DateTime.UtcNow))
                {
                    var badgeClass = "";
                    switch (post.Type)
                    {
                        case "workshop":
                            badgeClass = "bg-purple";
                            break;
                        case "conference":
                            badgeClass = "bg-warning text-dark";
                            break;
                        case "webinar":
                            badgeClass = "bg-success";
                            break;
                        default:
                            badgeClass = "bg-secondary";
                            break;
                    }
                    <li>
                        <div class="row">
                            <div class="col-md-3 text-center mb-3 mb-md-0">
                                @Html.Raw(post.Image)
                            </div>
                            <div class="col">
                                <div class="d-flex justify-content-between align-items-md-center mb-3">
                                    @if (!String.IsNullOrEmpty(post.EventDateRange))
                                    {
                                        <p class="mb-0"><i class="fas fa-calendar text-secondary me-1"></i>@post.EventDateRange<br /><i class="fas fa-clock text-secondary me-1"></i>Daily from @post.Time</p>
                                    }
                                    else
                                    {
                                        <p class="mb-0"><i class="fas fa-calendar text-secondary me-1"></i>@post.EventDate.GetValueOrDefault().ToString("dddd, %d MMMM yyyy")<br class="d-md-none" /><i class="fas fa-clock text-secondary ms-md-3 me-1"></i>@post.Time</p>
                                    }
                                    <div>
                                        <span class="badge rounded-pill text-end text-capitalize @badgeClass">@post.Type</span>
                                    </div>
                                </div>
                                <h4>@post.Title</h4>
                                @if (post.Summary.Length < 200 || post.IncludeRegisterPage == "false")
                                {
                                    @post.Summary
                                }
                                else
                                {
                                    @post.Summary.Substring(0, 200)<a href="@Url.RouteUrl(RouteName.Events, new { eventName = post.UrlPath })">... Keep Reading<i class="fas fa-angle-right"></i></a>
                                }
                                @if (post.Speakers != null)
                                {
                                    <ul class="list-unstyled list-inline list-speaker mt-3">
                                        <li class="list-inline-item me-0"><i class="fas fa-microphone text-secondary me-1"></i>Speakers: </li>
                                        @foreach (var speaker in post.Speakers)
                                        {
                                            <li class="list-inline-item me-0">@speaker</li>
                                        }
                                    </ul>
                                }
                                <div class="mt-3 text-center text-md-end">
                                    @if (post.IncludeRegisterPage == "true")
                                    {
                                        <a href="@Url.RouteUrl(RouteName.Events, new { eventName = post.UrlPath })" class="btn btn-outline-primary">Learn More</a>
                                    }
                                    @if (post.Title != "12 Days of Chocolatey")
                                    {
                                        <a href="@post.RegisterLink" class="btn btn-primary" target="_blank" rel="nofollow">Register Now</a>
                                    }
                                </div>
                            </div>
                        </div>
                        <hr />
                    </li>
                }
            </ul>
        }
        @if (Model.Any(x => x.EventDate < DateTime.UtcNow))
        {
            <h2 class="@if(Model.Any(x => x.EventDate > DateTime.UtcNow)){ <text>mt-5</text>}">On-Demand Events</h2>
            <hr />
            <ul class="list-unstyled">
                @foreach (var post in @Model.Where(x => x.EventDate < DateTime.UtcNow))
                {
                    var badgeClass = "";
                    switch (post.Type)
                    {
                        case "workshop":
                            badgeClass = "bg-purple";
                            break;
                        case "conference":
                            badgeClass = "bg-warning text-dark";
                            break;
                        case "webinar":
                            badgeClass = "bg-success";
                            break;
                        default:
                            badgeClass = "bg-secondary";
                            break;
                    }
                    <li>
                        <div class="row">
                            <div class="col-md-3 text-center mb-3 mb-md-0">
                                @Html.Raw(post.Image)
                            </div>
                            <div class="col">
                                <div class="d-flex justify-content-between align-items-md-center mb-3">
                                    @if (!String.IsNullOrEmpty(post.EventDateRange))
                                    {
                                        <p class="mb-0"><i class="fas fa-calendar text-secondary me-1"></i>Past event from @post.EventDateRange</p>
                                    }
                                    else
                                    {
                                        <p class="mb-0"><i class="fas fa-calendar text-secondary me-1"></i>Past event from @post.EventDate.GetValueOrDefault().ToString("dddd, %d MMMM yyyy")</p>
                                    }
                                    <div>
                                        <span class="badge rounded-pill text-end text-capitalize @badgeClass">@post.Type</span>
                                    </div>
                                </div>
                                <h4>@post.Title</h4>
                                @if (post.Summary.Length < 200 || post.IncludeRegisterPage == "false")
                                {
                                    @post.Summary
                                }
                                else
                                {
                                    @post.Summary.Substring(0, 200)<a href="@Url.RouteUrl(RouteName.Events, new { eventName = post.UrlPath })">... Keep Reading<i class="fas fa-angle-right"></i></a>
                                }
                                @if (post.Speakers != null)
                                {
                                    <ul class="list-unstyled list-inline list-speaker mt-3">
                                        <li class="list-inline-item me-0"><i class="fas fa-microphone text-secondary me-1"></i>Speakers: </li>
                                        @foreach (var speaker in post.Speakers)
                                        {
                                            <li class="list-inline-item me-0">@speaker</li>
                                        }
                                    </ul>
                                }
                                <div class="mt-3 text-center text-md-end">
                                    @if (post.IsOnDemand == "true")
                                    {
                                        if (post.IncludeRegisterPage == "true")
                                        {
                                            <a href="@Url.RouteUrl(RouteName.Events, new { eventName = post.UrlPath })" class="btn btn-outline-primary">Learn More</a>
                                        }
                                        if (post.Title != "12 Days of Chocolatey")
                                        {
                                            <a href="@post.RegisterLink" class="btn btn-primary" target="_blank" rel="nofollow">Watch Now</a>
                                        }
                                    }
                                    else
                                    {
                                        <p class="fw-bold">Replay Coming Soon!</p>
                                    }
                                </div>
                            </div>
                        </div>
                        <hr />
                    </li>
                }
            </ul>
        }
    </div>
</section>