@model EditProfileViewModel
@{
    ViewBag.Title = "Edit Profile";
    Bundles.Reference("content/css/chocolatey.bundle.min.css");
    Bundles.Reference("Scripts/main");
    Bundles.Reference("Scripts/validation");
}

@Html.Partial("~/Views/Shared/_AuthenticationSubNavigation.cshtml")
<section class="py-3 py-lg-5">
    <div class="container">
        @Html.ValidationSummary(true)
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <fieldset class="form">
                <legend class="d-none">Edit Profile</legend>
                <div class="row">
                    <div class="col-12 text-end mb-3">
                        <input class="btn btn-success" type="submit" value="Save All Changes" title="Save Changes" />
                        <a class="btn btn-danger cancel" href="@Url.Action("Account")" title="Cancel changes and go back.">Cancel</a>
                    </div>
                    <div class="col-md-6">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h4>Email and Notification Information</h4>
                                <hr />
                                @if (!String.IsNullOrEmpty(Model.PendingNewEmailAddress))
                                {
                                    <div class="callout callout-warning shadow-none">
                                        You recently requested to change your email address to <strong>@Model.PendingNewEmailAddress</strong>.
                                        This change will take effect when you confirm the address. Check your inbox (or spam folder) for an
                                        email with a confirmation link.
                                    </div>
                                }
                                <div>
                                    @Html.LabelFor(m => m.EmailAddress)
                                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control mt-2" })
                                    <div class="form-text">If you change your email address, you will need to confirm your new address for it to take effect.</div>
                                    @Html.ValidationMessageFor(m => m.EmailAddress)
                                </div>
                                <div class="form-check my-3">
                                    @Html.CheckBoxFor(m => m.EmailAllowed, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="EmailAllowed">Receive Email Notifications</label>
                                </div>
                                <div class="callout callout-danger shadow-none">
                                    <strong>Important:</strong> This setting allows users of the site to contact you
                                    about packages that you own using the <em>Contact Maintainers</em> form, or to request that you become a maintainer
                                    of their package. Unchecking this means users cannot contact you for these reasons. <strong>
                                        You will still receive moderation related email and/or email from site administrators.
                                    </strong> Unchecking the box also does not unsubscribe you from the newsletter. You will need to manage that from your MailChimp subscription.
                                </div>
                                <hr class="my-5" />
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => m.EmailAllModerationNotifications, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="EmailAllModerationNotifications">Send All Moderation Related Messages</label>
                                </div>
                                <p>When packages go through moderation review, should the system send all messages or just warnings and failures?</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h4>Repository Links</h4>
                                <hr />
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.PackagesRepository)
                                    @Html.TextBoxFor(m => m.PackagesRepository, new { @class = "form-control mt-2" })
                                <div class="form-text">The full Url to your packages repository (this is where you keep what builds the packages). Also put your automatic packages into this repository (the packages that use Chocolatey Package Updater to build and push automatically).</div>
                                    @Html.ValidationMessageFor(m => m.PackagesRepository)
                                </div>
                                <div>
                                    @Html.LabelFor(m => m.PackagesRepositoryAuto)
                                    @Html.TextBoxFor(m => m.PackagesRepositoryAuto, new { @class = "form-control mt-2" })
                                    <div class="form-text">Deprecated field, leave this empty. It is recommended to include your automatic packages into the repository you specified above. No need for an additional separate repository.</div>
                                    @Html.ValidationMessageFor(m => m.PackagesRepositoryAuto)
                                </div>
                            </div>
                        </div>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h4>Social Links</h4>
                                <hr />
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.TwitterUserName)
                                    @Html.TextBoxFor(m => m.TwitterUserName, new { @class = "form-control mt-2" })
                                    <div class="form-text">Your Twitter handle.</div>
                                    @Html.ValidationMessageFor(m => m.TwitterUserName)
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.GithubUserName)
                                    @Html.TextBoxFor(m => m.GithubUserName, new { @class = "form-control mt-2" })
                                    <div class="form-text">Your GitHub handle.</div>
                                    @Html.ValidationMessageFor(m => m.GithubUserName)
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.StackExchangeUrl)
                                    @Html.TextBoxFor(m => m.StackExchangeUrl, new { @class = "form-control mt-2" })
                                <div class="form-text">The full Url to your stack exchange profile. This is not the same as stackoverflow.</div>
                                    @Html.ValidationMessageFor(m => m.StackExchangeUrl)
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.HomepageUrl)
                                    @Html.TextBoxFor(m => m.HomepageUrl, new { @class = "form-control mt-2" })
                                    <div class="form-text">The full Url to your homepage.</div>
                                    @Html.ValidationMessageFor(m => m.HomepageUrl)
                                </div>
                                <div>
                                    @Html.LabelFor(m => m.BlogUrl)
                                    @Html.TextBoxFor(m => m.BlogUrl, new { @class = "form-control mt-2" })
                                    <div class="form-text">The full Url to your blog.</div>
                                    @Html.ValidationMessageFor(m => m.BlogUrl)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        } 
    </div>
</section>

@section BottomScripts
{
    <script language="javascript" type="text/javascript">
        ((window.gitter = {}).chat = {}).options = {
            room: 'chocolatey/chocolatey.org'
        };
    </script>
    <script src="https://sidecar.gitter.im/dist/sidecar.v1.js" async defer></script>
}